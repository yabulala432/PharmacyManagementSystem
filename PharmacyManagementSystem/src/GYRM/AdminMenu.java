package GYRM;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

public class AdminMenu extends JPanel {
//    private JPanel this;
    private JLabel WelcomeAdminLabel;
    private JButton itemsButton;
    private JButton employeeButton;
    private JButton removedButton;
    private JButton salesButton;
    private JButton exitButton;

    public AdminMenu(Main mainFrame){
        $$$setupUI$$$();
        itemsButton.addActionListener(e -> {
            mainFrame.showPanel("adminItems");
        });
        employeeButton.addActionListener(e->{
            mainFrame.showPanel("adminEmployee");
        });
        salesButton.addActionListener(e->{
            mainFrame.showPanel("adminSales");
        });
        removedButton.addActionListener(e->{
            mainFrame.showPanel("adminRemovalsTable");
        });
        exitButton.addActionListener(e->{
            mainFrame.showPanel("firstPage");
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
//        this = new JPanel();
        this.setLayout(new GridLayoutManager(8, 3, new Insets(0, 0, 0, 0), -1, -1));
        this.setBackground(new Color(-4850955));
        final Spacer spacer1 = new Spacer();
        this.add(spacer1, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        WelcomeAdminLabel = new JLabel();
        Font WelcomeAdminLabelFont = this.$$$getFont$$$("Serif", Font.BOLD | Font.ITALIC, 48, WelcomeAdminLabel.getFont());
        if (WelcomeAdminLabelFont != null) WelcomeAdminLabel.setFont(WelcomeAdminLabelFont);
        WelcomeAdminLabel.setText("Select Your Choice");
        this.add(WelcomeAdminLabel, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        itemsButton = new JButton();
        itemsButton.setBackground(new Color(-2032925));
        Font itemsButtonFont = this.$$$getFont$$$("Sree Krushnadevaraya", Font.BOLD | Font.ITALIC, 36, itemsButton.getFont());
        if (itemsButtonFont != null) itemsButton.setFont(itemsButtonFont);
        itemsButton.setText("ITEMS");
        this.add(itemsButton, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        this.add(spacer2, new GridConstraints(7, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        employeeButton = new JButton();
        employeeButton.setBackground(new Color(-1312042));
        Font employeeButtonFont = this.$$$getFont$$$("Sree Krushnadevaraya", Font.BOLD | Font.ITALIC, 36, employeeButton.getFont());
        if (employeeButtonFont != null) employeeButton.setFont(employeeButtonFont);
        employeeButton.setText("EMPLOYEE");
        this.add(employeeButton, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        removedButton = new JButton();
        removedButton.setBackground(new Color(-331813));
        Font removedButtonFont = this.$$$getFont$$$("Sree Krushnadevaraya", Font.BOLD | Font.ITALIC, 36, removedButton.getFont());
        if (removedButtonFont != null) removedButton.setFont(removedButtonFont);
        removedButton.setText("REMOVED (EMP/ITEM)");
        this.add(removedButton, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        salesButton = new JButton();
        salesButton.setBackground(new Color(-337419));
        Font salesButtonFont = this.$$$getFont$$$("Sree Krushnadevaraya", Font.BOLD | Font.ITALIC, 36, salesButton.getFont());
        if (salesButtonFont != null) salesButton.setFont(salesButtonFont);
        salesButton.setText("SALES");
        this.add(salesButton, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        exitButton = new JButton();
        exitButton.setBackground(new Color(-343368));
        Font exitButtonFont = this.$$$getFont$$$("Sree Krushnadevaraya", Font.BOLD | Font.ITALIC, 36, exitButton.getFont());
        if (exitButtonFont != null) exitButton.setFont(exitButtonFont);
        exitButton.setText("EXIT");
        this.add(exitButton, new GridConstraints(6, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        this.add(spacer3, new GridConstraints(4, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer4 = new Spacer();
        this.add(spacer4, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return this;
    }

}
