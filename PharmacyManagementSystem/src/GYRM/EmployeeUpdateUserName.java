package GYRM;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;
import java.util.Objects;

import static GYRM.EmployeeLogin.employee;

public class EmployeeUpdateUserName extends JPanel {
    private JTextField oldUsernameField;
    private JTextField newUsernameField;
    private JLabel oldUserName;
    private JLabel NewUserName;
    private JTextField confirmUsernameField;
    private JButton confirmButton;
    private JLabel confirmUserName;
    private JButton backToMenuButton;

    public EmployeeUpdateUserName(Main mainFrame) {
        $$$setupUI$$$();
        confirmButton.addActionListener(e -> {
            String oldUsername = oldUsernameField.getText();
            String newUsername = newUsernameField.getText();
            String confirmUsername = confirmUsernameField.getText();
            if (Objects.equals(confirmUsername, newUsername)) {
                int x = employee.updateEmployeeUserName(oldUsername, newUsername);
                newUsernameField.setText("");
                oldUsernameField.setText("");
                confirmUsernameField.setText("");
                if (x == 1) {
                    JOptionPane.showMessageDialog(this,"successfully updated");
                    mainFrame.showPanel("employeeLogin");
                }else{
                    JOptionPane.showMessageDialog(this,"incorrect old username");
                }
            }else{
                JOptionPane.showMessageDialog(this,"confirmation does not match");
            }
        });

        backToMenuButton.addActionListener(e -> {
            mainFrame.showPanel("employeeMenu");
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
//        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
//        this = new JPanel();
        this.setLayout(new GridLayoutManager(7, 5, new Insets(10, 10, 10, 10), -1, -1));
        this.setBackground(new Color(-9983750));
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$("Serif", Font.BOLD | Font.ITALIC, 48, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setForeground(new Color(-16777216));
        label1.setText("Update UserName ");
        this.add(label1, new GridConstraints(1, 1, 1, 3, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        oldUserName = new JLabel();
        Font oldUserNameFont = this.$$$getFont$$$("Serif", Font.BOLD | Font.ITALIC, 18, oldUserName.getFont());
        if (oldUserNameFont != null) oldUserName.setFont(oldUserNameFont);
        oldUserName.setForeground(new Color(-272410));
        oldUserName.setText("Old UserName");
        this.add(oldUserName, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        NewUserName = new JLabel();
        Font NewUserNameFont = this.$$$getFont$$$("Serif", Font.BOLD | Font.ITALIC, 18, NewUserName.getFont());
        if (NewUserNameFont != null) NewUserName.setFont(NewUserNameFont);
        NewUserName.setForeground(new Color(-272410));
        NewUserName.setText("New UserName");
        this.add(NewUserName, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        confirmUserName = new JLabel();
        Font confirmUserNameFont = this.$$$getFont$$$("Serif", Font.BOLD | Font.ITALIC, 18, confirmUserName.getFont());
        if (confirmUserNameFont != null) confirmUserName.setFont(confirmUserNameFont);
        confirmUserName.setForeground(new Color(-272410));
        confirmUserName.setText("Confirm UserName");
        this.add(confirmUserName, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        this.add(spacer1, new GridConstraints(0, 1, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        this.add(spacer2, new GridConstraints(2, 0, 3, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        this.add(spacer3, new GridConstraints(0, 4, 5, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        newUsernameField = new JTextField();
        Font newUsernameFieldFont = this.$$$getFont$$$("Serif", Font.BOLD | Font.ITALIC, 18, newUsernameField.getFont());
        if (newUsernameFieldFont != null) newUsernameField.setFont(newUsernameFieldFont);
        newUsernameField.setForeground(new Color(-16777216));
        this.add(newUsernameField, new GridConstraints(3, 2, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        oldUsernameField = new JTextField();
        Font oldUsernameFieldFont = this.$$$getFont$$$("Serif", Font.BOLD | Font.ITALIC, 18, oldUsernameField.getFont());
        if (oldUsernameFieldFont != null) oldUsernameField.setFont(oldUsernameFieldFont);
        oldUsernameField.setForeground(new Color(-16777216));
        this.add(oldUsernameField, new GridConstraints(2, 2, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        confirmUsernameField = new JTextField();
        Font confirmUsernameFieldFont = this.$$$getFont$$$("Serif", Font.BOLD | Font.ITALIC, 18, confirmUsernameField.getFont());
        if (confirmUsernameFieldFont != null) confirmUsernameField.setFont(confirmUsernameFieldFont);
        confirmUsernameField.setForeground(new Color(-16777216));
        this.add(confirmUsernameField, new GridConstraints(4, 2, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final Spacer spacer4 = new Spacer();
        this.add(spacer4, new GridConstraints(6, 1, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        confirmButton = new JButton();
        Font confirmButtonFont = this.$$$getFont$$$("Serif", Font.BOLD | Font.ITALIC, 18, confirmButton.getFont());
        if (confirmButtonFont != null) confirmButton.setFont(confirmButtonFont);
        confirmButton.setForeground(new Color(-16777216));
        confirmButton.setText("Confirm");
        this.add(confirmButton, new GridConstraints(5, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        backToMenuButton = new JButton();
        backToMenuButton.setText("back to menu");
        this.add(backToMenuButton, new GridConstraints(5, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return this;
    }

}
